unit TestmGenericClassList;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.Classes, mGenericClassList, System.Generics.Collections,
  System.SysUtils;

type
  // Test methods for class TGenericClassList

  TestTGenericClassList = class(TTestCase)
  strict private
    FList: TGenericClassList;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestAdd;
    procedure TestRemove;
    procedure TestGet;
    procedure TestExists;
  end;

implementation

procedure TestTGenericClassList.SetUp;
begin
  FList := TGenericClassList.Create;
end;

procedure TestTGenericClassList.TearDown;
begin
  FList.Free;
  FList := nil;
end;

procedure TestTGenericClassList.TestAdd;
begin
  FList.Add(TObject.Create);
  CheckTrue(FList.Exists<TObject>);
end;

procedure TestTGenericClassList.TestExists;
begin
  CheckFalse(FList.Exists<TObject>);
  FList.Add(TObject.Create);
  CheckTrue(FList.Exists<TObject>);
  FList.Remove<TObject>;
  CheckFalse(FList.Exists<TObject>);
end;

procedure TestTGenericClassList.TestRemove;
begin
  FList.Add(TObject.Create);
  CheckTrue(FList.Exists<TObject>);
  FList.Remove<TObject>;
  CheckFalse(FList.Exists<TObject>);
  // TODO: Validate method results
end;

procedure TestTGenericClassList.TestGet;
var
  LObj: TObject;
  LAddr: String;
begin
  LObj := TObject.Create;
  LAddr := Format('%p', [@LObj]);
  FList.Add(LObj);
  CheckTrue(FList.Exists<TObject>);
  LObj := FList.Get<TObject>;
  CheckEquals(LAddr, Format('%p', [@LObj]));
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTGenericClassList.Suite);
end.
