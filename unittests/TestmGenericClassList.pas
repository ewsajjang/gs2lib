unit TestmGenericClassList;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  mGenericClassList,
  System.Classes, System.Generics.Collections, System.SysUtils,
  DUnitX.TestFramework;

type
  // Test methods for class TGenericClassList

  TestTGenericClassList = class
  strict private
    FList: TGenericClassList;
  public
    [SetUp]
    procedure SetUp;
    [TearDown]
    procedure TearDown;
    [test]
    procedure TestAdd;
    [test]
    procedure TestRemove;
    [test]
    procedure TestGet;
    [test]
    procedure TestExists;
  end;

implementation

procedure TestTGenericClassList.SetUp;
begin
  FList := TGenericClassList.Create;
end;

procedure TestTGenericClassList.TearDown;
begin
  FList.Free;
  FList := nil;
end;

procedure TestTGenericClassList.TestAdd;
begin
  FList.Add(TObject.Create);
  Assert.IsTrue(FList.Exists<TObject>);
end;

procedure TestTGenericClassList.TestExists;
begin
  Assert.IsFalse(FList.Exists<TObject>);
  FList.Add(TObject.Create);
  Assert.IsTrue(FList.Exists<TObject>);
  FList.Remove<TObject>;
  Assert.IsFalse(FList.Exists<TObject>);
end;

procedure TestTGenericClassList.TestRemove;
begin
  FList.Add(TObject.Create);
  Assert.IsTrue(FList.Exists<TObject>);
  FList.Remove<TObject>;
  Assert.IsFalse(FList.Exists<TObject>);
  // TODO: Validate method results
end;

procedure TestTGenericClassList.TestGet;
var
  LObj: TObject;
  LAddr: String;
begin
  LObj := TObject.Create;
  LAddr := Format('%p', [@LObj]);
  FList.Add(LObj);
  Assert.IsTrue(FList.Exists<TObject>);
  LObj := FList.Get<TObject>;
  Assert.AreEqual<String>(LAddr, Format('%p', [@LObj]));
end;

initialization
  // Register any test cases with the test runner
  TDUnitX.RegisterTestFixture(TestTGenericClassList);
end.
